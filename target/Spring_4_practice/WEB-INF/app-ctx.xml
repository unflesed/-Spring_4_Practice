<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/security
       https://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="practice.*"/>

    <tx:annotation-driven transaction-manager="txManager"/>

    <jpa:repositories base-package="practice.persistence.dao.repositories"
                      entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="txManager"/>


    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="item"/>
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="car1" class="practice.persistence.model.Car">
        <property name="mark" value="BMW"/>
        <property name="model" value="x5"/>
        <property name="engine" value="3500"/>
        <property name="price" value="35000"/>
        <property name="speed" value="220"/>
    </bean>

    <bean id="car2" class="practice.persistence.model.Car">
        <property name="mark" value="BMW"/>
        <property name="model" value="x6"/>
        <property name="engine" value="3000"/>
        <property name="price" value="40000"/>
        <property name="speed" value="250"/>
    </bean>

    <bean id="car3" class="practice.persistence.model.Car">
        <property name="mark" value="Audi"/>
        <property name="model" value="A6"/>
        <property name="engine" value="2500"/>
        <property name="price" value="25000"/>
        <property name="speed" value="270"/>
    </bean>

    <bean id="car4" class="practice.persistence.model.Car">
        <property name="mark" value="Lada"/>
        <property name="model" value="Kalina"/>
        <property name="engine" value="1500"/>
        <property name="price" value="10000"/>
        <property name="speed" value="180"/>
    </bean>

    <!--AOP-->
    <bean id ="logger" class = "practice.aspects.Logger"/>
    <bean id="securityAspect" class="practice.aspects.SecurityAspect"/>

    <bean id="Authorized" class="practice.model.Authorization" scope="session" lazy-init="false">
        <property name="authorized" value="false"/>
    </bean>

    <aop:config>
        <aop:pointcut id="CarControllerPointCut" expression="execution(* practice.controllers.CarController.*(..))"/>
        <aop:aspect ref="logger" id="myAspect">
            <aop:before method="beforeMethod" pointcut-ref="CarControllerPointCut"/>
            <aop:after-returning method="afterReturn"
                                 pointcut="execution(* practice.controllers.CarController.*(..)) and args(result)"/>
            <aop:after-throwing method="afterThrowing" throwing="ex"
                                pointcut="within(@org.springframework.web.bind.annotation.RequestMapping *)"/>
        </aop:aspect>
        <aop:aspect ref="securityAspect" id="securityChecker">
            <aop:before method="checkAuthorize"
                        pointcut="execution(* practice.controllers.CarController.*(..))
                        &amp;&amp; !execution(* practice.controllers.CarController.authorize(..))
                        &amp;&amp; !execution(* practice.controllers.CarController.unAuthorize(..))
                        &amp;&amp; !execution(* practice.controllers.CarController.helloCar(..))" />
        </aop:aspect>
    </aop:config>
    <!--AOP-->
    <!--Security-->
    <security:global-method-security pre-post-annotations="enabled"/>
    <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"/>

        <security:intercept-url pattern="/car/**" access="hasAnyAuthority('ROLE_EMPLOYEE', 'ROLE_ADMIN')"/>

        <security:intercept-url pattern="/**" access="permitAll"/>
        <!--login-page="/login" username-parameter="username" password-parameter="password"-->
        <security:form-login
                             default-target-url="/" always-use-default-target="false" authentication-failure-url="/login?error=true"/>

        <security:logout logout-success-url="/"/>
        <security:remember-me/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user1" authorities="ROLE_EMPLOYEE" password="{noop}1"/>
                <security:user name="user2" authorities="ROLE_EMPLOYEE" password="{noop}2"/>
                <security:user name="admin" authorities="ROLE_ADMIN" password="{noop}admin"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--Security-->

</beans>